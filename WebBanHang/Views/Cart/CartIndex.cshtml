@model WebBanHang.Models.ViewModel.CartViewModel

@{
	ViewData["Title"] = "Giỏ hàng";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<section id="cart_items">
	<div class="container">
		<div class="breadcrumbs">
			<ol class="breadcrumb">
			</ol>
		</div>
		<div class="table-responsive cart_info">
			<table class="table table-condensed">
				<thead>
					<tr class="cart_menu">
						<td class="image">Item</td>
						<td class="description">Name</td>
						<td class="price">Price</td>
						<td class="quantity">Quantity</td>
						<td class="total">Total</td>
						<td></td>
					</tr>
				</thead>

				<tbody>

					@if (Model.CartModels.Count > 0)
					{
						foreach (var item in Model.CartModels)
						{
							<tr data-id="@item.ProductID" data-price="@item.Product.Price">
								<td class="cart_product">
									@{
										var firstImage = item.Product.ProductImage?.FirstOrDefault(x => x.IsMain);
										string imagePath = (firstImage != null && !string.IsNullOrEmpty(firstImage.ImageUrl))
										? $"/media/products/{firstImage.ImageUrl}"
										: "/images/no-image-available.jpg";
									}
									<a href="#">
										<img src="@imagePath" alt="@item.Product.NameProduct" width="100px" height="100px" />
									</a>
								</td>
								<td class="cart_description">
									<h4><a href="">@item.Product.NameProduct</a></h4>
								</td>
								<td class="cart_price">
									<p>@item.Product.Price.ToString("#,##0 VNĐ")</p>
								</td>
								<td class="cart_quantity">

									<button type="button" class="btn btn-default btn-sm btn-decrease" data-id="@item.ProductID"> - </button>
									<input class="item-qty btn btn-default btn-sm" type="text" name="quantity" value="@item.Quantity" autocomplete="off" size="2">
									<button type="button" class="btn btn-default btn-sm btn-increase" data-id="@item.ProductID"> + </button>
								</td>
								<td class="cart_total">
									<p class="cart_total_price">@Model.CartModels.Where(x => x.ProductID == item.ProductID).Sum(x => x.Quantity * x.Product.Price).ToString("N0") VNĐ</p>
								</td>
								<td class="cart_delete">
									<a class="btn btn-danger btn-sm btn-remove" data-id="@item.ProductID" href="#">
										<i class="fa fa-trash" style="color: gray;" ></i> 
									</a>								
								</td>
							</tr>
						}
						    <tr>
                                <td rowspan="4"> Grand Total: 
                                    <p id="grand-total" class="cart_total_price">@Model.TotalPrice.ToString("#,##0 VNĐ")</p>
                                </td>
                                <td colspan="8" style="text-align: right;">
                                    <button id="btn-clear-cart" class="btn btn-danger btn-sm">
										 Xóa tất cả
                                    </button>
                                    <a href="@Url.Action("CheckOutIndex", "Checkout")" class="btn btn-danger btn-sm">
                                         Đặt hàng
                                    </a>
                                </td>
                             </tr>
					}
					else
					{
						<tr>
							<td colspan="5" style='text-align:center;'>
								<h4>Giỏ hàng của bạn trống</h4>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
</section>

@section Scripts {
	<script>
		$(document).ready(function () {
			
			$(document).on("click", ".btn-decrease", function (e) {
				e.preventDefault();
				var id = $(this).data("id");
				var row = $("tr[data-id='" + id + "']");

				$.post("/Cart/Decrease", { id: id }, function (res) {
					
					if (res.totalItems === 0) {						
						location.reload();
						return;
					}
					row.find(".item-qty").val(res.itemQuantity);
					var pricePer = parseFloat(row.data("price")) || 0;
					var perTotal = res.itemQuantity * pricePer;
					row.find(".cart_total_price").text(perTotal.toLocaleString('vi-VN') + " VNĐ");									
					$("#cart-total").text(res.grandTotal.toLocaleString('vi-VN') + " VNĐ");
					$("#grand-total").text(res.grandTotal.toLocaleString('vi-VN') + " VNĐ");

					if (res.itemQuantity === 0) {
						row.remove();
					}
				});
			});
		
			$(document).on("click", ".btn-increase", function (e) {
				e.preventDefault();
				var id = $(this).data("id");
				var row = $("tr[data-id='" + id + "']");

				$.post("/Cart/Increase", { id: id }, function (res) {
					console.log(res);
					if (!res) return;
					row.find(".item-qty").val(res.itemQuantity);
					var pricePer = parseFloat(row.data("price")) || 0;
					var perTotal = res.itemQuantity * pricePer;
					row.find(".cart_total_price").text(perTotal.toLocaleString('vi-VN') + " VNĐ");
					$("#cart-total").text(res.grandTotal.toLocaleString('vi-VN') + " VNĐ");
					$("#grand-total").text(res.grandTotal.toLocaleString('vi-VN') + " VNĐ");
				});
			});
		});

					$(document).on("click", ".btn-remove", function (e) {
			e.preventDefault();

			var productId = $(this).data("id"); 
			var row = $(this).closest("tr");    

			$.post("/Cart/RemoveItem", { productId: productId }, function (res) {
				if (!res || !res.success) return;

				// Xóa dòng sản phẩm khỏi table
				row.remove();

				$("#cart-count").text(res.totalItems);
				$("#cart-total").text(res.grandTotal.toLocaleString() + " VNĐ");
				$("#grand-total").text(res.grandTotal.toLocaleString() + " VNĐ");

				
				if (res.totalItems === 0) {
					$(".cart_info tbody").html("<tr><td colspan='6' style='text-align:center;'><h4>Giỏ hàng của bạn trống.</h4></td></tr>");
				}
			});
		});

		$(document).on("click", "#btn-clear-cart", function (e) {
			e.preventDefault();

			Swal.fire({
				title: 'Bạn có chắc chắn?',
				text: "Tất cả sản phẩm trong giỏ hàng sẽ bị xóa!",
				icon: 'warning',
				showCancelButton: true,
				confirmButtonColor: '#d33',
				cancelButtonColor: '#3085d6',
				confirmButtonText: 'Có, xóa tất cả!',
				cancelButtonText: 'Hủy'
			}).then((result) => {
				if (result.isConfirmed) {
					$.post("/Cart/ClearCart", function(res) {
						if (!res) return;

						// Xóa hết các dòng sản phẩm trong bảng
						$(".cart_info tbody").html("<tr><td colspan='6' style='text-align:center;'><h4>Giỏ hàng của bạn trống.</h4></td></tr>");
						
						$("#cart-total").text("0 VNĐ");

						// Cập nhật Grand Total
						$("#grand-total").text("0 VNĐ");

						Swal.fire('Đã xóa!', 'Giỏ hàng đã được làm trống.', 'success');
					});
				}
			});
		});
	</script>
}
