@model LoginViewModel
@{
    Layout = "_AuthLayout";
    ViewData["Title"] = "Login";
}

<!-- Gọi CSS riêng -->
<link rel="stylesheet" href="~/css/Login.css" />

<section>
    <div class="login-form">
        <h2>Login to your account</h2>

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <form asp-action="Login" asp-controller="Account" method="post">
            <div class="form-group">
                <label asp-for="Username"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Password"></label>
                <input asp-for="Password" id="Password" type="password" class="form-control" />
                <span id="togglePassword">👁</span>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-default">Login</button>
            <a asp-controller="Account" asp-action="Register">Tạo tài khoản mới</a>
        </form>
    </div>
</section>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const pwd = document.getElementById("Password");
            const btn = document.getElementById("togglePassword");

            btn.addEventListener("click", function () {
                const type = pwd.getAttribute("type") === "password" ? "text" : "password";
                pwd.setAttribute("type", type);
                btn.textContent = type === "password" ? "👁" : "🙈";
            });
        });
    </script>
}

@Html.AntiForgeryToken()
